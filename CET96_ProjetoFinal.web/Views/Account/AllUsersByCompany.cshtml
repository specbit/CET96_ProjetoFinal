@model CET96_ProjetoFinal.web.Models.CondominiumManagerViewModel

@{
    ViewData["Title"] = "Condominium Managers";
}

<div class="container mb-4">
    <h1 class="display-4">Condominium Managers</h1>
    <p class="lead">Manage all condominium manager accounts for <strong>@ViewBag.CompanyName</strong>.</p>

    <div class="mt-3">
        <a asp-controller="Account"
           asp-action="RegisterNewCondominiumManager"
           asp-route-companyId="@ViewBag.CompanyId"
           class="btn btn-primary">Create New Manager</a>

        <a asp-controller="Condominiums"
           asp-action="Index"
           asp-route-id="@ViewBag.CompanyId"
           class="btn btn-secondary">Back to Condominiums</a>
    </div>
</div>

<div class="card">
    <div class="card-header"><h5 class="mb-0">Company Managers</h5></div>
    <div class="card-body">
        <table class="table table-hover mb-0">
            <thead class="table-dark text-center">
                <tr>
                    <th>Name</th>
                    <th>Email</th>
                    <th>Roles</th>
                    <th>Status</th>
                    <th class="text-end">Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var user in Model.AllUsers)
                {
                    <tr>
                        <td>
                            @user.FirstName @user.LastName

                            @* Check if the AssignedCondominiumName property has a value *@
                            @if (!string.IsNullOrEmpty(user.AssignedCondominiumName))
                            {
                                <span class="badge bg-success ms-2" title="Assigned to: @user.AssignedCondominiumName">
                                    Manages: @user.AssignedCondominiumName
                                </span>
                            }
                        </td>
                        <td>@user.UserName</td>
                        <td>
                            @foreach (var role in user.Roles)
                            {
                                <span class="badge bg-info me-1">@role</span>
                            }
                        </td>
                        <td>
                            @if (user.IsDeactivated)
                            {
                                <span class="badge bg-danger">Deactivated</span>
                            }
                            else
                            {
                                <span class="badge bg-success">Active</span>
                            }
                        </td>
                        <td class="text-end">
                            <div class="d-flex gap-2 justify-content-end">
                                @* The "Edit" button is always available *@
                                <a asp-controller="Account" asp-action="EditAccount" asp-route-id="@user.Id" class="btn btn-sm btn-warning">Edit</a>

                                @* Conditionally display buttons based on assignment status *@
                                @if (user.Roles.Contains("Condominium Manager"))
                                {
                                    @* If the manager is NOT assigned, show "Associate" *@
                                    @if (string.IsNullOrEmpty(user.AssignedCondominiumName))
                                    {
                                        <a asp-controller="Account" asp-action="LinkManagerToCondominium" asp-route-id="@user.Id" class="btn btn-sm btn-info">Associate</a>
                                    }
                                    @* If the manager IS assigned, show "Dismiss" *@
                                    else
                                    {
                                        <form asp-controller="Account" asp-action="DismissManager" method="post" style="display:inline;">
                                            @Html.AntiForgeryToken()
                                            <input type="hidden" name="userId" value="@user.Id" />
                                            <button type="submit" class="btn btn-sm btn-secondary">Dismiss</button>
                                        </form>
                                    }

                                    @* Conditionally display "Activate" or "Deactivate" based on user status *@
                                    @if (user.IsDeactivated)
                                    {
                                        <form asp-controller="Account" asp-action="ActivateCondominiumManager" method="post" style="display:inline;">
                                            @Html.AntiForgeryToken()
                                            <input type="hidden" name="id" value="@user.Id" />
                                            <button type="submit" class="btn btn-sm btn-success">Activate</button>
                                        </form>
                                    }
                                    else
                                    {
                                        <form asp-controller="Account" asp-action="DeactivateCondominiumManager" method="post" style="display:inline;">
                                            @Html.AntiForgeryToken()
                                            <input type="hidden" name="id" value="@user.Id" />
                                            <button type="submit" class="btn btn-sm btn-danger">Deactivate</button>
                                        </form>
                                    }
                                }
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>